[ { "title": "Crear archivos de Texto con Python", "url": "/posts/Crear-archivos-de-Texto-con-Python/", "categories": "Blogging, Python", "tags": "python, code, files", "date": "2021-11-10 20:14:00 +0100", "snippet": "Crear archivos de texto con PythonCrear un archivo txt. with open(&quot;prueba.txt&quot;, &quot;w&quot;) as text_file: text_file.write(&quot;Este texto se insertará en un archivo llamado prueba.txt &quot;)Crear archivos html con PythonCrear un archivo html con encoding. with open(&quot;html1.html&quot;, &quot;w&quot;, encoding=&quot;utf-8&quot;) as text_file: text_file.write(response)Crear archivos json con PythonCrear un archivo json. with open(&quot;file.json&quot;, &quot;w&quot;) as text_file: json.dump(data, text_file)…to be continued" }, { "title": "Cadenas de caracteres en Python", "url": "/posts/Cadenas-de-caracteres-en-Python/", "categories": "Blogging, Python", "tags": "python, code, string", "date": "2021-10-06 02:35:00 +0200", "snippet": "Crear cadenas de caracteresPodemos crear una cadena de caracteres simplemente encerrando contenido entre comillas después de un signo de igual = mensaje = &#39;Hola Mundo&#39;Concatenar cadenasPodemos concatenar cadenas con el operador +, recuerda que los espacios en blanco tienes que tenerlos en cuenta. mensaje = &#39;Hola&#39; + &#39; &#39; + &#39;Mundo&#39; print(mensaje) -&amp;gt; Hola Mundo…to be continued" }, { "title": "Conectar a Base de datos con Python", "url": "/posts/Update-Process/", "categories": "Blogging, Python", "tags": "python, code, database", "date": "2021-09-20 02:35:00 +0200", "snippet": "Clase DatabaseClase encargada de conectar con la base de datos y funciones para realizar diferentes consultas import pymysqlfrom warnings import filterwarningsfilterwarnings(&#39;ignore&#39;, category=pymysql.Warning)class Database: def __init__(self): self.connection = pymysql.connect( host=&#39;IP&#39;, port=3306, user=&#39;user&#39;, password=&#39;password&#39;, db=&#39;db&#39; ) try: self.cursor = self.connection.cursor() except Exception as e: print(&quot;Error al conectar con la BD &quot; + e) raise def __disconnect__(self): self.connection.close() def select_data(self): sql = &#39;SELECT * FROM process&#39; try: self.cursor.execute(sql) ticker = self.cursor.fetchall() return ticker except Exception as e: print(&quot;Error en función select_data &quot; + e) raise finally: self.__disconnect__() def update_status_proces(self, status, idprocess): sql = &#39;UPDATE `process` SET `status`= %s WHERE `idprocess` = %s&#39; values = (status, idprocess) try: self.cursor.execute(sql, values) self.connection.commit() except pymysql.IntegrityError as e: if not e[0] == 1062: raise print(&quot;Oops! Fallo al insertar en la tabla process&quot;) finally: self.__disconnect__() def update_proces(self, idprocess, process_name, process_pid, update_date, creation_date, status, pc): sql = &#39;UPDATE `process` SET `idprocess` = %s, `process_name`= %s, `process_pid`=%s, `update_date`= %s, `creation_date`= %s, `status`= %s, `pc`= %s WHERE `idprocess` = %s&#39; values = (idprocess, process_name, process_pid, update_date, creation_date, status, pc, idprocess) try: self.cursor.execute(sql, values) self.connection.commit() except pymysql.IntegrityError as e: if not e[0] == 1062: raise print(&quot;Oops! Fallo al insertar en la tabla process&quot;) finally: self.__disconnect__() Actualizar campos en base de datos con Python from datetime import datetime import time import DB def update_process(creation_date): try: db = DB.Database() idprocess = str(socket.gethostname()) + &quot;_process&quot; process_pid = os.getpid() process_name = &quot;processControl.py&quot; update_date = str(datetime.now().strftime(&#39;%Y-%m-%d %H:%M:%S&#39;)) status = True pc = socket.gethostname() db.update_proces(idprocess, process_name, process_pid, update_date, creation_date, status, pc) print(&#39;Actualizado: &#39;, process_name, update_date, pc) except Exception as e: print(&#39;##### Error en función update_process ####&#39;, e) raise" }, { "title": "Concatenar diferentes archivos de Excel en una sola hoja de Excel", "url": "/posts/Concatenar-Datos-Excel/", "categories": "Blogging, Excel", "tags": "Visual Basic, code, Macros", "date": "2020-06-06 13:06:00 +0200", "snippet": "Juntar varias hojas de Excel de archivos diferentes en una única hoja Sub juntarExcel() Dim bookList As Workbook Dim objeto As Object, directorio As Object, archivos As Object, archivo As Object Application.ScreenUpdating = True Set objeto = CreateObject(&quot;Scripting.FileSystemObject&quot;) Set directorio = objeto.Getfolder(PATH) Set archivos = directorio.Files For Each archivo In archivos Set bookList = Workbooks.Open(archivo) Debug.Print bookList.Name bookList.Worksheets(1).Activate Lastrow = ActiveSheet.Cells(Rows.Count, 1).End(xlUp).Row Lastcolumn = ActiveSheet.Cells(5, Columns.Count).End(xlToLeft).Column Debug.Print Lastrow Debug.Print Lastcolumn Range(Cells(6, 1), Cells(Lastrow, Lastcolumn)).Copy ThisWorkbook.Worksheets(1).Activate endrow = ActiveSheet.Cells(Rows.Count, 1).End(xlUp).Offset(1, 0).Row ActiveSheet.Paste Destination:=ActiveSheet.Range(Cells(endrow, 1), Cells(endrow, 5)) Application.CutCopyMode = False bookList.Close NextEnd Sub" } ]
